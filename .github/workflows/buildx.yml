name: Buildx

on:
  workflow_dispatch:
  schedule:
    - cron: 0 */12 * * *
  push:
    branches: [master]

jobs:
  docker:
    runs-on: ubuntu-20.04
    outputs:
      builds: ${{ steps.generate.outputs.builds }}
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/checkout@v2
      - uses: bahmutov/npm-install@v1
      - id: generate
        run: node ./build.js

  docker-build:
    needs:
      - docker
    runs-on: ubuntu-20.04
    strategy:
      matrix: ${{ fromJSON(needs.docker.outputs.builds) }}
      fail-fast: false
    steps:
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.meta.alpineVersion }}-${{ matrix.meta.revision }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.meta.alpineVersion }}-${{ matrix.meta.revision }}-
            ${{ runner.os }}-buildx-${{ matrix.meta.alpineVersion }}-
            ${{ runner.os }}-buildx-
      - uses: actions/checkout@v2
      - uses: docker/build-push-action@v2
        with:
          context: ./rtl433
          build-args: ${{ matrix.buildArgs }}
          platforms: ${{ matrix.platforms }}
          push: true
          pull: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: ${{ matrix.tags }}
